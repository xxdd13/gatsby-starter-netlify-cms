{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","className","map","_ref","post","node","style","border","padding","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","frontmatter","title","date","excerpt","React","Component","propTypes","PropTypes","shape","array","pageQuery"],"mappings":"sPAKqBA,4FACnBC,OAAA,WAAS,IAEQC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kCAAd,mBAEDV,EACEW,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACHR,EAAAC,EAAAC,cAAA,OACEE,UAAU,UACVK,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,WAC5CC,IAAKL,EAAKM,IAEVb,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAMV,UAAU,mBAAmBW,GAAIR,EAAKS,OAAOC,MAChDV,EAAKW,YAAYC,OAEpBnB,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,aAAQK,EAAKW,YAAYE,OAE3BpB,EAAAC,EAAAC,cAAA,SACGK,EAAKc,QACNrB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAMV,UAAU,kBAAkBW,GAAIR,EAAKS,OAAOC,MAAlD,6BA9BmBK,IAAMC,WA2C7C/B,EAAUgC,UAAY,CACpB3B,KAAM4B,IAAUC,MAAM,CACpB5B,kBAAmB2B,IAAUC,MAAM,CACjC3B,MAAO0B,IAAUE,WAKhB,IAAMC,EAAS","file":"component---src-pages-index-js-3e9cbb56e9a40658b2ca.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1 className=\"has-text-weight-bold is-size-2\">Latest Stories</h1>\n            </div>\n            {posts\n              .map(({ node: post }) => (\n                <div\n                  className=\"content\"\n                  style={{ border: '1px solid #333', padding: '2em 4em' }}\n                  key={post.id}\n                >\n                  <p>\n                    <Link className=\"has-text-primary\" to={post.fields.slug}>\n                      {post.frontmatter.title}\n                    </Link>\n                    <span> &bull; </span>\n                    <small>{post.frontmatter.date}</small>\n                  </p>\n                  <p>\n                    {post.excerpt}\n                    <br />\n                    <br />\n                    <Link className=\"button is-small\" to={post.fields.slug}>\n                      Keep Reading â†’\n                    </Link>\n                  </p>\n                </div>\n              ))}\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}